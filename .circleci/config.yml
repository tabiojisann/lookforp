version: 2.1
jobs: 
  build:
    docker:
      - image: circleci/php:7.3-node-browsers
      - image: circleci/mysql:5.7-ram
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_DATABASE: partner
          MYSQL_USER: ojisan
          MYSQL_PASSWORD: ojisan
          MYSQL_ROOT_PASSWORD: root

    steps:
      - checkout 
      - run:
         name: Install MySQL driver
         command: |
           sudo docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd
           sudo docker-php-ext-install zip bcmath pdo_mysql
      - run:
         name: Install Node
         command: |
           curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
           sudo apt-get install -y nodejs
      
      - restore_cache:
         key: composer-v1-{{ checksum "composer.lock" }}

      - run: composer install -n --prefer-dist

      - save_cache: 
         key: composer-v1-{{ checksum "composer.lock" }}
         paths:
          - vendor

      - restore_cache:
         key: npm-v1-{{ checksum "package-lock.json" }}

      - run: npm ci

      - run:
         name: npm ci
         command: |
          if [ ! -d node_modeles ]; then
            npm ci
          fi
      - save_cache:
         key: npm-v1-{{ checksum "package-lock.json" }}
         paths:
          - node_modeles    
      - run: npm run dev
      - run: 
          name: アプリケーションテスト
          command: vendor/bin/phpunit
  deploy:
    docker:
      - image: circleci/php:7.3-node-browsers
    steps:
      - add_ssh_keys
      - run:
          name: デプロイ
          command: |
            ssh -o StrictHostKeyChecking=no -t ojisan@${HOST_NAME} "cd lookforp && \
            git pull origin master && \
            composer install -n  --no-dev --prefer-dist && \ 
            npm ci && \
            npm run prod && \
            php artisan migrate --force && \ 
            php artisan config:cache"

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
         requires:
          - build
         filters:
          branches:
            only: 
              - master






                

    



  
      
#テストの自動化
  ## 実行環境を選択
  ## コンテナ内に各種必要なパッケージインストール
  ## コマンド /vendortests/phpunit 実行 

#デプロイの自動化
  ## masterブランチにマージ　or コミットしたらCircleCIにチェックアウト
  ## デプロイ開始合図
  ## SSHログイン
  ## EC2からGithubにアクセスしてgitpullを実行
  ## EC2上で実行環境ビルド
  ## DBマイグレーション
  
#デプロイの自動化2
  ## masterブランチにマージ　or コミットしたらCircleCIにチェックアウト
  ## ビルド実行　と　デプロイ開始
  ## S3にアクセスしてビルド結果をアップロード
  ## codedeployにデプロイ開始の合図
  ## デプロイをEC2に指示
  ## EC2はS3からビルド結果を取得する
  ## DBマイグレーション


# 必要なこと
 ##
 ##
 ##
 ##
